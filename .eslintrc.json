{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true
  },
  "extends": ["react-app", "react-app/jest", "airbnb", "plugin:prettier/recommended"],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "prettier"],
  "rules": {
    "quotes": [
      "error",
      "double",
      {
        "avoidEscape": true
      }
    ],
    "no-continue": "off",
    "no-prototype-builtins": "off",
    "no-restricted-exports": [
      "error",
      {
        "restrictedNamedExports": ["then"]
      }
    ],
    "no-underscore-dangle": "off",
    "no-unused-vars": ["error", { "args": "all", "argsIgnorePattern": "^_" }],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "prettier/prettier": ["error", { "printWidth": 120 }],
    "react/jsx-props-no-spreading": ["warn"],
    "react/static-property-placement": ["error", "static public field"],
    "react/no-unused-prop-types": ["warn"],
    "react/no-unused-class-component-methods": ["off"],
    "react/no-danger": ["off"],
    "react/forbid-prop-types": [
      "error",
      {
        "forbid": ["any", "object"],
        "checkContextTypes": false,
        "checkChildContextTypes": false
      }
    ],
    "jsx-a11y/no-autofocus": ["off"],
    "jsx-a11y/media-has-caption": [
      "warn",
      {
        "audio": ["Audio"],
        "video": ["Video"],
        "track": ["Track"]
      }
    ]
  }
}
